---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: nodes.infra.kuid.dev
spec:
  group: infra.kuid.dev
  names:
    kind: Node
    listKind: NodeList
    plural: nodes
    singular: node
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          A Node represents a fundamental unit that implements compute, storage, and/or networking within your environment.
          Nodes can embody physical, virtual, or containerized entities, offering versatility in deployment options to suit
          diverse infrastructure requirements.
          Nodes are logically organized within racks and sites/regions, establishing a hierarchical structure for efficient
          resource management and organization. Additionally, Nodes are associated with nodeGroups, facilitating centralized
          management and control within defined administrative boundaries.
          Each Node is assigned a provider, representing the entity responsible for implementing the specifics of the Node.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NodeSpec defines the desired state of Node
            properties:
              labels:
                additionalProperties:
                  type: string
                description: Labels as user defined labels
                type: object
              location:
                description: |-
                  Location defines the location information where this resource is located
                  in lon/lat coordinates
                properties:
                  latitude:
                    type: string
                  longitude:
                    type: string
                required:
                - latitude
                - longitude
                type: object
              node:
                description: Node defines the name of the node
                type: string
              partition:
                description: Partition defines the partition this resource belongs
                  to
                type: string
              platformType:
                description: PlatformType defines the type of platform
                type: string
              position:
                description: Position defines the relative position of the resource
                  in the rack
                type: string
              provider:
                description: Provider defines the provider implementing this resource.
                type: string
              rack:
                description: Rack defines the rack this resource belongs to
                type: string
              region:
                description: Region defines the region of the resource
                type: string
              site:
                description: Site defines the site of the resource
                type: string
            required:
            - node
            - partition
            - platformType
            - provider
            - region
            - site
            type: object
          status:
            description: NodeStatus defines the observed state of Node
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              systemID:
                description: System ID define the unique system id of the node
                type: string
            type: object
        type: object
    served: true
    storage: true
