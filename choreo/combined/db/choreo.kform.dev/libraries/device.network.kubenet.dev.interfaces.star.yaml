apiVersion: choreo.kform.dev/v1alpha1
kind: Library
metadata:
  creationTimestamp: "2024-09-08T13:10:06Z"
  managedFields:
  - apiVersion: choreo.kform.dev/v1alpha1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:code: {}
        f:type: {}
      f:status: {}
    manager: inputfileloader
    operation: Apply
    time: "2024-09-08T13:10:06Z"
  name: device.network.kubenet.dev.interfaces.star
  resourceVersion: "0"
  uid: 3df52ccd-a5c2-4007-80c9-348652a39874
spec:
  code: "load(\"id.kuid.dev.ids.star\", \"genEndpointIDString\")\nload(\"infra.kuid.dev.endpoints.star\",
    \"getEndpointSpeed\")\n\ndef getInterfaceSpecWithLookup(epID, namespace):\n  epName
    = genEndpointIDString(epID)\n  ep = get_resource(\"infra.kuid.dev/v1alpha1\",
    \"Endpoint\")\n  rsp = client_get(epName, namespace, ep[\"resource\"])\n  if rsp[\"error\"]
    != None:\n    return None, rsp[\"error\"]\n  speed = getEndpointSpeed(rsp['resource'])\n
    \ \n  spec = {}\n  for key, val in epID.items():\n    if key == \"port\" or key
    == \"endpoint\":\n      spec[key] = int(val)\n    else:\n      spec[key] = val\n
    \ spec[\"mtu\"] = 9000\n  spec[\"ethernet\"] = {\"speed\": speed}\n  return spec,
    None\n\ndef getInterfaceSpec(epID):\n  spec = {}\n  for key, val in epID.items():\n
    \   if key == \"port\" or key == \"endpoint\":\n      spec[key] = int(val)\n    else:\n
    \     spec[key] = val\n  return spec\n\ndef getInterface(name, namespace, spec):\n
    \ return {\n    \"apiVersion\": \"device.network.kubenet.dev/v1alpha1\",\n    \"kind\":
    \"Interface\",\n    \"metadata\": {\n        \"name\": name,\n        \"namespace\":
    namespace,\n    },\n    \"spec\": spec,\n  }\n\n\n        \n\n        \n\n           "
  type: starlark
status: {}
