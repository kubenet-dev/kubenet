apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: networkdesigns.network.app.kuid.dev
spec:
  group: network.app.kuid.dev
  names:
    categories:
    - kuid
    - net
    kind: NetworkDesign
    listKind: NetworkDesignList
    plural: networkdesigns
    singular: networkdesign
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NetworkDesign is the NetworkDesign for the NetworkDesign API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NetworkDesignSpec defines the desired state of NetworkDesign
            properties:
              encapsulation:
                description: Encapsultation define the encapsulation parameters
                properties:
                  mpls:
                    properties:
                      ldp:
                        type: object
                      rsvp:
                        type: object
                      sr:
                        type: object
                    type: object
                  srv6:
                    properties:
                      ldp:
                        type: object
                    type: object
                  vxlan:
                    type: object
                type: object
              interfaces:
                description: Interfaces define the interface parameters of the network
                  design
                properties:
                  loopback:
                    properties:
                      addressing:
                        default: dualstack
                        description: Addressing defines the addressing used in this
                          network
                        enum:
                        - dualstack
                        - ipv4only
                        - ipv6only
                        - ipv4unnumbered
                        - ipv6unnumbered
                        type: string
                      prefixes:
                        description: |-
                          Prefixes defines the prefixes belonging to this network config
                          prefixLength would be indicated by a label
                        items:
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels as user defined labels
                              type: object
                            prefix:
                              description: Prefix defines the ip cidr in prefix notation.
                              pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))|((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))
                              type: string
                          required:
                          - prefix
                          type: object
                        type: array
                    type: object
                  underlay:
                    properties:
                      addressing:
                        default: dualstack
                        description: Addressing defines the addressing used in this
                          network
                        enum:
                        - dualstack
                        - ipv4only
                        - ipv6only
                        - ipv4unnumbered
                        - ipv6unnumbered
                        type: string
                      bfd:
                        description: BFD defines the bfd parameters on the interface
                        properties:
                          enabled:
                            description: Disabled defines if bfd is disabled or not
                            type: boolean
                          minEchoRx:
                            description: MinEchoRx defines the echo function timer,
                              in msec.
                            format: int32
                            type: integer
                          minRx:
                            description: MinTx defines the required minimal interval
                              for receiving BFD packets, in msec.
                            format: int32
                            type: integer
                          minTx:
                            description: MinTx defines the desired minimal interval
                              for sending BFD packets, in msec.
                            format: int32
                            type: integer
                          multiplier:
                            description: Multiplier defines the number of missed packets
                              before the session is considered down
                            format: int32
                            type: integer
                          ttl:
                            description: TTL defines the time to live on the outgoing
                              BFD packet
                            format: int32
                            maximum: 255
                            minimum: 2
                            type: integer
                        type: object
                      prefixes:
                        description: |-
                          Prefixes defines the prefixes belonging to this network config
                          prefixLength would be indicated by a label
                        items:
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels as user defined labels
                              type: object
                            prefix:
                              description: Prefix defines the ip cidr in prefix notation.
                              pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))|((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))
                              type: string
                          required:
                          - prefix
                          type: object
                        type: array
                      vlanTagging:
                        description: VLANTagging defines if VLAN tagging should be
                          used or not
                        type: boolean
                    type: object
                type: object
              protocols:
                description: Protocols define the network wide protocol parameters
                properties:
                  bgpEVPN:
                    type: object
                  bgpLabeledUnicastv4:
                    type: object
                  bgpLabeledUnicastv6:
                    type: object
                  bgpRouteTarget:
                    type: object
                  bgpVPNv4:
                    type: object
                  bgpVPNv6:
                    type: object
                  ebgp:
                    properties:
                      asPool:
                        type: string
                      bfd:
                        description: BFD defines if BFD is enabled globally on EBGP
                        type: boolean
                    type: object
                  ibgp:
                    properties:
                      as:
                        format: int32
                        type: integer
                      localAS:
                        type: boolean
                      routeReflectors:
                        items:
                          type: string
                        type: array
                    type: object
                  isis:
                    properties:
                      areas:
                        description: Areas defines the ISIS areas
                        items:
                          type: string
                        type: array
                      bfd:
                        description: BFD defines if BFD is enabled globally on ISIS
                        type: boolean
                      instance:
                        description: Instance defines the name of the ISIS instance
                        type: string
                      level:
                        default: L2
                        description: LevelCapability defines the level capability
                          of the ISIS in the topology
                        enum:
                        - L2
                        - L2
                        - L1L2
                        type: string
                      maxECMPPaths:
                        default: 1
                        description: MaxECMPPaths defines the maximum ecmp paths used
                          in OSPF
                        format: int32
                        maximum: 64
                        minimum: 1
                        type: integer
                    required:
                    - areas
                    type: object
                  ospf:
                    properties:
                      area:
                        description: Area defines the default area used if not further
                          refined on the interface.
                        type: string
                      bfd:
                        description: BFD defines if BFD is enabled globally on OSPF
                        type: boolean
                      instance:
                        description: Instance defines the name of the OSPF instance
                        type: string
                      maxECMPPaths:
                        default: 1
                        description: MaxECMPPaths defines the maximum ecmp paths used
                          in OSPF
                        format: int32
                        maximum: 64
                        minimum: 1
                        type: integer
                      version:
                        default: v2
                        description: Version defines the Version used for ospf
                        enum:
                        - v2
                        - v3
                        type: string
                    required:
                    - area
                    - version
                    type: object
                type: object
              topology:
                type: string
            required:
            - topology
            type: object
          status:
            description: NetworkDesignStatus defines the observed state of NetworkDesign
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: networkdevices.network.app.kuid.dev
spec:
  group: network.app.kuid.dev
  names:
    categories:
    - kuid
    - net
    kind: NetworkDevice
    listKind: NetworkDeviceList
    plural: networkdevices
    singular: networkdevice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .spec.provider
      name: PROVIDER
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NetworkDevice is the NetworkDevice for the NetworkDevice API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NetworkDeviceDeviceSpec defines the desired state of NetworkDevice
            properties:
              bfd:
                description: BFD defines the bfd parameters for the device config
                properties:
                  interfaces:
                    items:
                      properties:
                        enabled:
                          description: Disabled defines if bfd is disabled or not
                          type: boolean
                        minEchoRx:
                          description: MinEchoRx defines the echo function timer,
                            in msec.
                          format: int32
                          type: integer
                        minRx:
                          description: MinTx defines the required minimal interval
                            for receiving BFD packets, in msec.
                          format: int32
                          type: integer
                        minTx:
                          description: MinTx defines the desired minimal interval
                            for sending BFD packets, in msec.
                          format: int32
                          type: integer
                        multiplier:
                          description: Multiplier defines the number of missed packets
                            before the session is considered down
                          format: int32
                          type: integer
                        subInterfaceName:
                          description: SubInterfaceName defines the name and id of
                            the sub interface
                          properties:
                            id:
                              format: int32
                              type: integer
                            name:
                              type: string
                          required:
                          - id
                          - name
                          type: object
                        ttl:
                          description: TTL defines the time to live on the outgoing
                            BFD packet
                          format: int32
                          maximum: 255
                          minimum: 2
                          type: integer
                      required:
                      - subInterfaceName
                      type: object
                    type: array
                type: object
              interfaces:
                description: Interfaces defines the interfaces for the device config
                items:
                  description: TODO LAG, etc
                  properties:
                    lagMember:
                      type: boolean
                    name:
                      type: string
                    speed:
                      type: string
                    subInterfaces:
                      items:
                        properties:
                          id:
                            format: int32
                            type: integer
                          ipv4:
                            properties:
                              addresses:
                                items:
                                  type: string
                                type: array
                            type: object
                          ipv6:
                            properties:
                              addresses:
                                items:
                                  type: string
                                type: array
                            type: object
                          peerName:
                            type: string
                          type:
                            description: routed or bridged
                            type: string
                          vlan:
                            format: int32
                            type: integer
                        required:
                        - id
                        - peerName
                        - type
                        type: object
                      type: array
                    vlanTagging:
                      type: boolean
                  required:
                  - lagMember
                  - name
                  - speed
                  - vlanTagging
                  type: object
                type: array
              networkInstances:
                description: NetworkInstances defines the network instances for the
                  device config
                items:
                  properties:
                    interfaces:
                      items:
                        properties:
                          id:
                            format: int32
                            type: integer
                          name:
                            type: string
                        required:
                        - id
                        - name
                        type: object
                      type: array
                    name:
                      type: string
                    protocols:
                      properties:
                        bgp:
                          properties:
                            addressFamilies:
                              description: AddressFamilies defines the address families
                                that need to be enabled globally
                              items:
                                properties:
                                  name:
                                    type: string
                                  rfc5549:
                                    type: boolean
                                required:
                                - name
                                type: object
                              type: array
                            as:
                              format: int32
                              type: integer
                            dynamicNeighbors:
                              properties:
                                interfaces:
                                  items:
                                    properties:
                                      peerAS:
                                        format: int32
                                        type: integer
                                      peerGroup:
                                        type: string
                                      subInterfaceName:
                                        description: SubInterfaceName defines the
                                          name and id of the sub interface
                                        properties:
                                          id:
                                            format: int32
                                            type: integer
                                          name:
                                            type: string
                                        required:
                                        - id
                                        - name
                                        type: object
                                    required:
                                    - peerAS
                                    - peerGroup
                                    - subInterfaceName
                                    type: object
                                  type: array
                                prefixes:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - interfaces
                              type: object
                            neighbors:
                              items:
                                properties:
                                  bfd:
                                    type: boolean
                                  localAS:
                                    format: int32
                                    type: integer
                                  localAddress:
                                    type: string
                                  peerAS:
                                    format: int32
                                    type: integer
                                  peerAddress:
                                    type: string
                                  peerGroup:
                                    type: string
                                required:
                                - localAS
                                - localAddress
                                - peerAS
                                - peerAddress
                                - peerGroup
                                type: object
                              type: array
                            peerGroups:
                              items:
                                properties:
                                  addressFamilies:
                                    description: Address families define the address
                                      families to be disabled
                                    items:
                                      properties:
                                        name:
                                          type: string
                                        rfc5549:
                                          type: boolean
                                      required:
                                      - name
                                      type: object
                                    type: array
                                  bfd:
                                    type: boolean
                                  name:
                                    type: string
                                  routeReflector:
                                    properties:
                                      clusterID:
                                        type: string
                                    required:
                                    - clusterID
                                    type: object
                                required:
                                - name
                                type: object
                              type: array
                            routerID:
                              description: RouterID for the BGP Instance
                              type: string
                          required:
                          - as
                          - routerID
                          type: object
                        bgpEVPN:
                          properties:
                            ecmp:
                              format: int32
                              type: integer
                            evi:
                              format: int32
                              type: integer
                            vxlanInterface:
                              type: string
                          required:
                          - ecmp
                          - evi
                          - vxlanInterface
                          type: object
                        bgpVPN:
                          properties:
                            exportRouteTarget:
                              type: string
                            importRouteTarget:
                              type: string
                          required:
                          - exportRouteTarget
                          - importRouteTarget
                          type: object
                        isis:
                          properties:
                            instances:
                              items:
                                properties:
                                  addressFamilies:
                                    description: AddressFamilies defines the address
                                      families enabled in the instance
                                    items:
                                      type: string
                                    type: array
                                  interfaces:
                                    description: Interfaces define the interface parameters
                                      used with ISIS
                                    items:
                                      properties:
                                        ipv4:
                                          description: IPv4 define the ipv4 interface
                                            parameters
                                          properties:
                                            bfd:
                                              description: BFD defines if bfd is enabled
                                              type: boolean
                                          required:
                                          - bfd
                                          type: object
                                        ipv6:
                                          description: IPv6 define the ipv6 interface
                                            parameters
                                          properties:
                                            bfd:
                                              description: BFD defines if bfd is enabled
                                              type: boolean
                                          required:
                                          - bfd
                                          type: object
                                        level1:
                                          description: Level1 defines the ISIS interface
                                            level1
                                          properties:
                                            disable:
                                              type: boolean
                                            metric:
                                              format: int32
                                              type: integer
                                            metricIPv6Unicast:
                                              format: int32
                                              type: integer
                                          required:
                                          - disable
                                          - metric
                                          - metricIPv6Unicast
                                          type: object
                                        level2:
                                          description: Level2 defines the ISIS interface
                                            level2
                                          properties:
                                            disable:
                                              type: boolean
                                            metric:
                                              format: int32
                                              type: integer
                                            metricIPv6Unicast:
                                              format: int32
                                              type: integer
                                          required:
                                          - disable
                                          - metric
                                          - metricIPv6Unicast
                                          type: object
                                        networkType:
                                          description: NetworkType defines the type
                                            of network on the interface
                                          enum:
                                          - pointToPoint
                                          - broadcast
                                          - unknown
                                          type: string
                                        passive:
                                          description: Passive allow interface to
                                            be advertised as an ISIS interface without
                                            running the ISIS protocol
                                          type: boolean
                                        subInterfaceName:
                                          description: SubInterfaceName defines the
                                            name and id of the sub interface
                                          properties:
                                            id:
                                              format: int32
                                              type: integer
                                            name:
                                              type: string
                                          required:
                                          - id
                                          - name
                                          type: object
                                      required:
                                      - subInterfaceName
                                      type: object
                                    type: array
                                  level1:
                                    description: Level1 defines the ISIS interface
                                      level1
                                    properties:
                                      metricStryle:
                                        type: string
                                    required:
                                    - metricStryle
                                    type: object
                                  level2:
                                    description: Level2 defines the ISIS interface
                                      level2
                                    properties:
                                      metricStryle:
                                        type: string
                                    required:
                                    - metricStryle
                                    type: object
                                  levelCapability:
                                    description: LevelCapability defines the level
                                      capability of the intermediate system (router)
                                    type: string
                                  maxECMPPaths:
                                    default: 1
                                    description: MaxECMPPaths defines the maximum
                                      ecmp paths used
                                    format: int32
                                    maximum: 64
                                    minimum: 1
                                    type: integer
                                  name:
                                    description: Name defines the name of the instance
                                    type: string
                                  net:
                                    description: ISIS network entity title (NET)
                                    items:
                                      type: string
                                    type: array
                                required:
                                - interfaces
                                - level1
                                - level2
                                - levelCapability
                                - name
                                - net
                                type: object
                              type: array
                          required:
                          - instances
                          type: object
                        ospf:
                          properties:
                            instances:
                              items:
                                properties:
                                  areas:
                                    description: Areas define the areas in the ospf
                                      instance
                                    items:
                                      properties:
                                        interfaces:
                                          description: Interfaces define the interface
                                            parameters used with ISIS
                                          items:
                                            properties:
                                              bfd:
                                                description: BFD defines if bfd is
                                                  enabled
                                                type: boolean
                                              networkType:
                                                default: pointToPoint
                                                description: Type defines the type
                                                  of interface
                                                enum:
                                                - pointToPoint
                                                - broadcast
                                                - unknown
                                                type: string
                                              passive:
                                                description: Passive allow interface
                                                  to be advertised as an interface
                                                  without running the OSPF protocol
                                                type: boolean
                                              subInterfaceName:
                                                description: SubInterfaceName defines
                                                  the name and id of the sub interface
                                                properties:
                                                  id:
                                                    format: int32
                                                    type: integer
                                                  name:
                                                    type: string
                                                required:
                                                - id
                                                - name
                                                type: object
                                            required:
                                            - subInterfaceName
                                            type: object
                                          type: array
                                        name:
                                          description: Name defines the name of the
                                            area
                                          type: string
                                        nssa:
                                          description: NSSA define the NSSA parameters
                                          type: object
                                        stub:
                                          description: Stub define the stub parameters
                                          type: object
                                      required:
                                      - interfaces
                                      - name
                                      type: object
                                    type: array
                                  asbr:
                                    description: ASBR defines if the router is an
                                      ASBR (Autonomous System Boundary Router)
                                    type: boolean
                                  maxECMPPaths:
                                    default: 1
                                    description: MaxECMPPaths defines the maximum
                                      ecmp paths used
                                    format: int32
                                    maximum: 64
                                    minimum: 1
                                    type: integer
                                  name:
                                    description: Name defines the name of the instance
                                    type: string
                                  routerID:
                                    description: RouterID of the instance
                                    type: string
                                  version:
                                    default: v2
                                    description: Version defines the Version used
                                      for ospf
                                    enum:
                                    - v2
                                    - v3
                                    type: string
                                required:
                                - name
                                - routerID
                                - version
                                type: object
                              type: array
                          required:
                          - instances
                          type: object
                      type: object
                    type:
                      description: mac-vrf, ip-vrf
                      type: string
                    vxlanInterface:
                      properties:
                        id:
                          format: int32
                          type: integer
                        name:
                          type: string
                      required:
                      - id
                      - name
                      type: object
                  required:
                  - name
                  - type
                  type: object
                type: array
              provider:
                description: Provider defines the provider implementing this resource.
                type: string
              routingPolicies:
                description: RoutingPolicies defines the routingPolicies for the device
                  config
                items:
                  properties:
                    ipv4Prefixes:
                      items:
                        type: string
                      type: array
                    ipv6Prefixes:
                      items:
                        type: string
                      type: array
                    name:
                      type: string
                  type: object
                type: array
              system:
                description: System defines the system parameters for the device config
                properties:
                  protocols:
                    properties:
                      bgpEVPN:
                        type: object
                      bgpVPN:
                        type: object
                    type: object
                type: object
              topology:
                type: string
              tunnelInterfaces:
                description: TunnelInterfaces defines the unnelInterfaces for the
                  device config
                items:
                  properties:
                    name:
                      type: string
                    subInterfaces:
                      items:
                        properties:
                          id:
                            format: int32
                            type: integer
                          type:
                            description: routed or bridged
                            type: string
                        required:
                        - id
                        - type
                        type: object
                      type: array
                  required:
                  - name
                  type: object
                type: array
            required:
            - provider
            - topology
            type: object
          status:
            description: NetworkDeviceStatus defines the observed state of NetworkDevice
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              providerConfig:
                description: ProviderConfig defines the configs based on the provider
                  processing
                type: object
                x-kubernetes-preserve-unknown-fields: true
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: networks.network.app.kuid.dev
spec:
  group: network.app.kuid.dev
  names:
    categories:
    - kuid
    - net
    kind: Network
    listKind: NetworkList
    plural: networks
    singular: network
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='NetworkPararmReady')].status
      name: PARAM-READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='NetworkDeviceReady')].status
      name: DEVICES-READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: REASON
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Network is the Network for the Network API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NetworkSpec defines the desired state of Network
            properties:
              bridges:
                description: |-
                  Bridges define a set of logical ports that share the same
                  flooding or broadcast characteristics. Like a virtual LAN (VLAN),
                  a bridge can span one or more ports of multiple devices.
                items:
                  properties:
                    interfaces:
                      description: Interfaces defines the interfaces belonging to
                        the bridge domain
                      items:
                        description: |-
                          NetworkInterface defines the interface parameters
                          An interface can be attached to a Router and/or a Bridge.
                          Dynamic or static assignments are possible
                        properties:
                          addresses:
                            description: IPs define the list of IP addresses on the
                              interface
                            items:
                              properties:
                                address:
                                  type: string
                                attribute:
                                  type: string
                              required:
                              - address
                              type: object
                            type: array
                          bridge:
                            description: |-
                              Bridge defines the name of the bridge belonging to the interface
                              A bridge can only be attached to a router and is mutualy exclusive with a
                              defined Endpoint
                            type: string
                          endpoint:
                            description: Endpoint
                            type: string
                          node:
                            description: Node defines the node the resource belongs
                              to.
                            type: string
                          protocols:
                            description: Protocols define the protocols parameters
                              for this interface
                            properties:
                              bgp:
                                properties:
                                  localAS:
                                    format: int32
                                    type: integer
                                  peerAS:
                                    format: int32
                                    type: integer
                                type: object
                            type: object
                          region:
                            description: Region defines the region this sites belongs
                              to
                            type: string
                          selector:
                            description: |-
                              Selector defines the selector criterias for the interface selection
                              Used for dynamic interface selection
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          site:
                            description: Site defines the site in which the node is
                              deployed
                            type: string
                          vlanID:
                            description: VLANID defines the VLAN ID on the interface
                            format: int32
                            type: integer
                          vlanTagging:
                            description: |-
                              VLANTagging defines if the interface is vlanTagged or not
                              Used for dynamic interface selection
                            type: boolean
                        required:
                        - node
                        - region
                        - site
                        type: object
                      type: array
                    name:
                      description: Name defines the name of the bridge domain
                      type: string
                    networkID:
                      description: NetworkID defines the id of the bridge domain
                      type: integer
                  required:
                  - name
                  type: object
                type: array
              routers:
                description: |-
                  Routers defines a set of routes belonging to a given routing instance
                  A Router can also be called a virtual routing instances. Each virtual
                  routing instance can hold overlapping IP information
                  A router supports both ipv4 and ipv6
                items:
                  properties:
                    interfaces:
                      description: Interfaces defines the interfaces belonging to
                        the routing table
                      items:
                        description: |-
                          NetworkInterface defines the interface parameters
                          An interface can be attached to a Router and/or a Bridge.
                          Dynamic or static assignments are possible
                        properties:
                          addresses:
                            description: IPs define the list of IP addresses on the
                              interface
                            items:
                              properties:
                                address:
                                  type: string
                                attribute:
                                  type: string
                              required:
                              - address
                              type: object
                            type: array
                          bridge:
                            description: |-
                              Bridge defines the name of the bridge belonging to the interface
                              A bridge can only be attached to a router and is mutualy exclusive with a
                              defined Endpoint
                            type: string
                          endpoint:
                            description: Endpoint
                            type: string
                          node:
                            description: Node defines the node the resource belongs
                              to.
                            type: string
                          protocols:
                            description: Protocols define the protocols parameters
                              for this interface
                            properties:
                              bgp:
                                properties:
                                  localAS:
                                    format: int32
                                    type: integer
                                  peerAS:
                                    format: int32
                                    type: integer
                                type: object
                            type: object
                          region:
                            description: Region defines the region this sites belongs
                              to
                            type: string
                          selector:
                            description: |-
                              Selector defines the selector criterias for the interface selection
                              Used for dynamic interface selection
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          site:
                            description: Site defines the site in which the node is
                              deployed
                            type: string
                          vlanID:
                            description: VLANID defines the VLAN ID on the interface
                            format: int32
                            type: integer
                          vlanTagging:
                            description: |-
                              VLANTagging defines if the interface is vlanTagged or not
                              Used for dynamic interface selection
                            type: boolean
                        required:
                        - node
                        - region
                        - site
                        type: object
                      type: array
                    name:
                      description: Name defines the name of the routing table
                      type: string
                    networkID:
                      description: NetworkID defines the id of router
                      type: integer
                  required:
                  - name
                  type: object
                type: array
              topology:
                type: string
            required:
            - topology
            type: object
          status:
            description: NetworkStatus defines the observed state of Network
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              devicesConfigStatus:
                items:
                  properties:
                    node:
                      type: string
                    ready:
                      type: boolean
                    reason:
                      type: string
                  required:
                  - node
                  - ready
                  type: object
                type: array
              devicesDeployStatus:
                items:
                  properties:
                    node:
                      type: string
                    ready:
                      type: boolean
                    reason:
                      type: string
                  required:
                  - node
                  - ready
                  type: object
                type: array
              usedReferences:
                description: |-
                  UsedReferences track the resource used to determine if a change to the resources was identified
                  If a change is detected a reconcile will be triggered and the child status will be reset
                properties:
                  networkDesignResourceVersion:
                    type: string
                  networkSpecHash:
                    type: string
                required:
                - networkDesignResourceVersion
                - networkSpecHash
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: topologies.topo.app.kuid.dev
spec:
  group: topo.app.kuid.dev
  names:
    categories:
    - kuid
    - topo
    kind: Topology
    listKind: TopologyList
    plural: topologies
    singular: topology
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Topology is the Topology for the Topology API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TopologySpec defines the desired state of Topology
            properties:
              containerLab:
                description: ContainerLab holds the containerlab topology
                type: string
              location:
                description: Location identifies the default location this topology
                  is located in
                properties:
                  latitude:
                    type: string
                  longitude:
                    type: string
                required:
                - latitude
                - longitude
                type: object
              region:
                description: Region identifies the default region this topology is
                  located in
                type: string
              site:
                description: Site identifies the default site this topology is located
                  in
                type: string
            type: object
          status:
            description: TopologyStatus defines the observed state of Topology
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps
  namespace: kuid-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kuidapps
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kuidapps
    spec:
      containers:
      - command:
        - /app/kuidapps
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: ENABLE_TOPOLOGY
          value: "true"
        - name: ENABLE_LINK
          value: "true"
        - name: ENABLE_NETWORKDESIGN
          value: "true"
        - name: ENABLE_NETWORK
          value: "true"
        - name: ENABLE_NETWORKPACKAGE
          value: "true"
        - name: ENABLE_NETWORKPARAMS
          value: "true"
        - name: ENABLE_NETWORKDEVICE
          value: "true"
        image: ghcr.io/kuidio/kuidapps:v0.0.32
        imagePullPolicy: Always
        name: kuidapps
      securityContext:
        fsGroup: 10000
        runAsGroup: 10000
        runAsUser: 10000
      serviceAccountName: kuidapps
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps-clusterrole
rules:
- apiGroups:
  - ""
  resources:
  - events
  - configmaps
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - topo.app.kuid.dev
  resources:
  - topologies
  - topologies/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - infra.be.kuid.dev
  resources:
  - nodes
  - nodes/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - infra.be.kuid.dev
  resources:
  - links
  - links/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - infra.be.kuid.dev
  resources:
  - endpoints
  - endpoints/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ipam.be.kuid.dev
  resources:
  - ipindices
  - ipindices/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ipam.be.kuid.dev
  resources:
  - ipclaims
  - ipclaims/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - as.be.kuid.dev
  resources:
  - asindices
  - asindices/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - as.be.kuid.dev
  resources:
  - asclaims
  - asclaims/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - genid.be.kuid.dev
  resources:
  - genidindices
  - genidindices/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - genid.be.kuid.dev
  resources:
  - genidclaims
  - genidclaims/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - network.app.kuid.dev
  resources:
  - networkdesigns
  - networkdesigns/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - network.app.kuid.dev
  resources:
  - networks
  - networks/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - network.app.kuid.dev
  resources:
  - networkdevices
  - networkdevices/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - config.sdcio.dev
  resources:
  - configs
  - configs/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - pkg.pkgserver.dev
  resources:
  - packagerevisions
  - packagerevisions/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - pkg.pkgserver.dev
  resources:
  - packagerevisionresourceses
  - packagerevisionresourceses/status
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps-clusterrole-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuidapps-clusterrole
subjects:
- kind: ServiceAccount
  name: kuidapps
  namespace: kuid-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps-leader-election-role
  namespace: kuid-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps-leader-election-role-binding
  namespace: kuid-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuidapps-leader-election-role
subjects:
- kind: ServiceAccount
  name: kuidapps
  namespace: kuid-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: kuidapps
  name: kuidapps
  namespace: kuid-system
